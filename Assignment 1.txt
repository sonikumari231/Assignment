Assignment 1

Java
1. Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.

Ans import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ShuffleArray {
    public static void main(String[] args) {
        // Create an array
        Integer[] array = {1, 2, 3, 4, 5, 6, 7};

        // Convert array to a list
        List<Integer> list = new ArrayList<>(Arrays.asList(array));

        // Shuffle the list
        Collections.shuffle(list);

        // Convert the list back to an array (if needed)
        Integer[] shuffledArray = list.toArray(new Integer[0]);

        // Print the shuffled array
        System.out.println("Shuffled Array: " + Arrays.toString(shuffledArray));
    }
}

2. Enter a Roman Number as input and convert it to an integer. (Example: IX = 9)
Ans import java.util.HashMap;
import java.util.Map;

public class RomanToInteger {
    public static void main(String[] args) {
        // Example: Convert "IX" to integer
        String romanNumeral = "IX";
        int result = romanToInt(romanNumeral);

        System.out.println("The integer representation of " + romanNumeral + " is: " + result);
    }

    public static int romanToInt(String s) {
        Map<Character, Integer> romanMap = new HashMap<>();
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
        romanMap.put('L', 50);
        romanMap.put('C', 100);
        romanMap.put('D', 500);
        romanMap.put('M', 1000);

        int result = 0;

        for (int i = 0; i < s.length(); i++) {
            int current = romanMap.get(s.charAt(i));

            // If the next numeral is larger, subtract the current numeral
            if (i < s.length() - 1 && romanMap.get(s.charAt(i + 1)) > current) {
                result -= current;
            } else {
                result += current;
            }
        }

        return result;
    }
}

3. Check if the input is pangram or not. (A pangram is a sentence that contains all the
alphabets from A to Z)

Ans import java.util.Scanner;

public class PangramChecker {
    public static void main(String[] args) {
        // Create a Scanner object to get user input
        Scanner scanner = new Scanner(System.in);

        // Prompt the user to enter a string
        System.out.print("Enter a sentence: ");
        String input = scanner.nextLine();

        // Check if the input is a pangram
        boolean isPangram = isPangram(input);

        // Display the result
        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }

        // Close the Scanner to avoid resource leaks
        scanner.close();
    }

    public static boolean isPangram(String str) {
        // Convert the input to lowercase for case-insensitive comparison
        str = str.toLowerCase();

        // Create an array to track the presence of each letter
        boolean[] lettersPresent = new boolean[26];

        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);

            // Check if the character is a letter and mark it as present
            if ('a' <= ch && ch <= 'z') {
                lettersPresent[ch - 'a'] = true;
            }
        }

        // Check if all letters from A to Z are present
        for (boolean isPresent : lettersPresent) {
            if (!isPresent) {
                return false;
            }
        }

        return true;
    }
}
 
JavaScript
1. Take a sentence as an input and reverse every word in that sentence.
Example - This is a sunny day > shiT si a ynnus yad.

Ans  function reverseWords(sentence) {
    // Split the sentence into words
    let words = sentence.split(' ');

    // Reverse each word
    let reversedWords = words.map(word => reverseString(word));

    // Join the reversed words back into a sentence
    let reversedSentence = reversedWords.join(' ');

    return reversedSentence;
}

function reverseString(str) {
    // Convert the string to an array, reverse it, and join back into a string
    return str.split('').reverse().join('');
}

// Example usage
let inputSentence = "This is a sunny day";
let reversedResult = reverseWords(inputSentence);
console.log(reversedResult);

2. Perform sorting of an array in descending order.
Ans // Function to perform sorting in descending order
function sortDescending(arr) {
    // Use the sort method with a custom comparison function
    arr.sort(function(a, b) {
        // Compare b with a for descending order
        return b - a;
    });
}

// Example usage
let numbers = [5, 2, 8, 1, 7];
console.log("Original array:", numbers);

// Sort the array in descending order
sortDescending(numbers);

console.log("Sorted array in descending order:", numbers);

HTML
1. Create a basic calculator using HTML, CSS, and JavaScript with the functionality of add,
subtract, multiply and divide. Use the following picture forreference.

Ans <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        #calculator {
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        input {
            width: 100%;
            margin-bottom: 10px;
            padding: 10px;
            font-size: 18px;
        }

        button {
            width: 48px;
            height: 48px;
            margin: 5px;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="calculator">
        <input type="text" id="display" disabled>
        <br>
        <button onclick="appendNumber('1')">1</button>
        <button onclick="appendNumber('2')">2</button>
        <button onclick="appendNumber('3')">3</button>
        <button onclick="appendOperator('+')">+</button>
        <br>
        <button onclick="appendNumber('4')">4</button>
        <button onclick="appendNumber('5')">5</button>
        <button onclick="appendNumber('6')">6</button>
        <button onclick="appendOperator('-')">-</button>
        <br>
        <button onclick="appendNumber('7')">7</button>
        <button onclick="appendNumber('8')">8</button>
        <button onclick="appendNumber('9')">9</button>
        <button onclick="appendOperator('*')">*</button>
        <br>
        <button onclick="appendNumber('0')">0</button>
        <button onclick="clearDisplay()">C</button>
        <button onclick="calculateResult()">=</button>
        <button onclick="appendOperator('/')">/</button>
    </div>

    <script>
        function appendNumber(number) {
            document.getElementById('display').value += number;
        }

        function appendOperator(operator) {
            document.getElementById('display').value += operator;
        }

        function clearDisplay() {
            document.getElementById('display').value = '';
        }

        function calculateResult() {
            try {
                document.getElementById('display').value = eval(document.getElementById('display').value);
            } catch (error) {
                document.getElementById('display').value = 'Error';
            }
        }
    </script>
</body>
</html>

2. Create a survey form with Fields; First Name, Last Name, Date of Birth, Country
(dropdown), Gender (checkbox), Profession, email, and mobile number. All the input
fields are necessary to submit the form. Create two buttons Submit and Reset. Reset will
reset the form while clicking on submit, first, it will check all the fields and necessary
validations and then a popup will appear displaying all the selected values with labels in
front of it. On closing the popup, the form should reset all the values. Use the following
image for reference

Ans <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Survey Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        #surveyForm {
            width: 400px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        input, select {
            width: 100%;
            padding: 10px;
            margin-bottom: 16px;
            box-sizing: border-box;
        }

        input[type="checkbox"] {
            width: auto;
        }

        #genderContainer {
            display: flex;
        }

        button {
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        #popup {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            align-items: center;
            justify-content: center;
        }

        #popupContent {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        }
    </style>
</head>
<body>

<div id="surveyForm">
    <label for="firstName">First Name:</label>
    <input type="text" id="firstName" required>

    <label for="lastName">Last Name:</label>
    <input type="text" id="lastName" required>

    <label for="dob">Date of Birth:</label>
    <input type="date" id="dob" required>

    <label for="country">Country:</label>
    <select id="country" required>
        <option value="" disabled selected>Select Country</option>
        <!-- Add your country options here -->
        <option value="USA">USA</option>
        <option value="Canada">Canada</option>
        <!-- Add more countries as needed -->
    </select>

    <label>Gender:</label>
    <div id="genderContainer">
        <input type="checkbox" id="maleCheckbox" value="Male">
        <label for="maleCheckbox">Male</label>
        <input type="checkbox" id="femaleCheckbox" value="Female">
        <label for="femaleCheckbox">Female</label>
    </div>

    <label for="profession">Profession:</label>
    <input type="text" id="profession" required>

    <label for="email">Email:</label>
    <input type="email" id="email" required>

    <label for="mobile">Mobile Number:</label>
    <input type="tel" id="mobile" required>

    <button onclick="submitForm()">Submit</button>
    <button onclick="resetForm()">Reset</button>
</div>

<div id="popup">
    <div id="popupContent">
        <h2>Survey Form Summary</h2>
        <p id="summary"></p>
        <button onclick="closePopup()">Close</button>
    </div>
</div>

<script>
    function submitForm() {
        // Validate the form
        if (!validateForm()) {
            return;
        }

        // Get values from form
        let firstName = document.getElementById('firstName').value;
        let lastName = document.getElementById('lastName').value;
        let dob = document.getElementById('dob').value;
        let country = document.getElementById('country').value;
        let gender = getSelectedGender();
        let profession = document.getElementById('profession').value;
        let email = document.getElementById('email').value;
        let mobile = document.getElementById('mobile').value;

        // Display values in popup
        document.getElementById('summary').innerHTML =
            `First Name: ${firstName}<br>
            Last Name: ${lastName}<br>
            Date of Birth: ${dob}<br>
            Country: ${country}<br>
            Gender: ${gender}<br>
            Profession: ${profession}<br>
            Email: ${email}<br>
            Mobile Number: ${mobile}`;

        // Show the popup
        document.getElementById('popup').style.display = 'flex';
    }

    function resetForm() {
        // Reset all form fields
        document.getElementById('surveyForm').reset();
    }

    function closePopup() {
        // Close the popup
        document.getElementById('popup').style.display = 'none';
        // Reset the form after closing the popup
        resetForm();
    }

    function getSelectedGender() {
        // Get selected gender from checkboxes
        let gender = '';
        if (document.getElementById('maleCheckbox').checked) {
            gender = 'Male';
        }
        if (document.getElementById('femaleCheckbox').checked) {
            gender = 'Female';
        }
        return gender;
    }

    function validateForm() {
        // Perform necessary validations
        let isValid = true;

        // Add your validations here, for example:
        // if (document.getElementById('firstName').value === '') {
        //     alert('First Name is required.');
        //     isValid = false;
        // }

        // Add more validations as needed

        return isValid;
    }
</script>

</body>
</html>

